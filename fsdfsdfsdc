[1mdiff --git a/addamatric4X5.c b/addamatric4X5.c[m
[1mdeleted file mode 100644[m
[1mindex 68ad4ed..0000000[m
[1m--- a/addamatric4X5.c[m
[1m+++ /dev/null[m
[36m@@ -1,69 +0,0 @@[m
[31m-//  Q 1) To add 2 matrix Elements(4X5)[m
[31m-[m
[31m-[m
[31m-#include <stdio.h>[m
[31m-[m
[31m-int main()[m
[31m-{[m
[31m-[m
[31m-    int a[4][5];[m
[31m-    printf("Enter elements for first matrix:\n");[m
[31m-    for (int i = 0; i < 4; i++)[m
[31m-    {[m
[31m-        printf("Enter elements for row %d:\n", i + 1);[m
[31m-        /* code */[m
[31m-        for (int j = 0; j < 5; j++)[m
[31m-        {[m
[31m-            /* code */[m
[31m-            scanf("%d", &a[i][j]);[m
[31m-        }[m
[31m-    }[m
[31m-    printf("The elements of the first 4x5 matrix are:\n");[m
[31m-    for (int i = 0; i < 4; i++)[m
[31m-    {[m
[31m-        for (int j = 0; j < 5; j++)[m
[31m-        {[m
[31m-            printf("%d \t", a[i][j]);[m
[31m-        }[m
[31m-        printf("\n");[m
[31m-    }[m
[31m-    int b[4][5];[m
[31m-    printf("Enter elements for second matrix:\n");[m
[31m-    for (int i = 0; i < 4; i++)[m
[31m-    {[m
[31m-        printf("Enter elements for row %d:\n", i + 1);[m
[31m-        for (int j = 0; j < 5; j++)[m
[31m-        {[m
[31m-            scanf("%d", &b[i][j]);[m
[31m-        }[m
[31m-    }[m
[31m-    printf("The elements of the second 4x5 matrix are:\n");[m
[31m-    for (int i = 0; i < 4; i++)[m
[31m-    {[m
[31m-        for (int j = 0; j < 5; j++)[m
[31m-        {[m
[31m-            printf("%d\t ", b[i][j]);[m
[31m-        }[m
[31m-        printf("\n");[m
[31m-    }[m
[31m-    int c[4][5];[m
[31m-[m
[31m-    for (int i = 0; i < 4; i++)[m
[31m-    {[m
[31m-        for (int j = 0; j < 5; j++)[m
[31m-        {[m
[31m-            c[i][j] = a[i][j] + b[i][j];[m
[31m-        }[m
[31m-    }[m
[31m-    printf("The sum of the two 4x5 matrices is:\n");[m
[31m-    for (int i = 0; i < 4; i++)[m
[31m-    {[m
[31m-        for (int j = 0; j < 5; j++)[m
[31m-        {[m
[31m-            printf("%d\t ", c[i][j]);[m
[31m-        }[m
[31m-        printf("\n");[m
[31m-    }[m
[31m-[m
[31m-    return 0;[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/addamatric4X5.exe b/addamatric4X5.exe[m
[1mdeleted file mode 100644[m
[1mindex a38826b..0000000[m
Binary files a/addamatric4X5.exe and /dev/null differ
[1mdiff --git a/arraychange.c b/arraychange.c[m
[1mdeleted file mode 100644[m
[1mindex f17ffa6..0000000[m
[1m--- a/arraychange.c[m
[1m+++ /dev/null[m
[36m@@ -1,50 +0,0 @@[m
[31m-// Q 4) To change any element of the array of 7 elements[m
[31m-//        5 6 7 22 2 3 6[m
[31m-[m
[31m-#include <stdio.h>[m
[31m-[m
[31m-int main()[m
[31m-{[m
[31m-    int arr[7] = {5, 6, 7, 22, 2, 3, 6}; // Initialize array with given elements[m
[31m-    int position, newValue;[m
[31m-    int i;[m
[31m-[m
[31m-    // Display original array[m
[31m-    printf("Original array: ");[m
[31m-    for (i = 0; i < 7; i++)[m
[31m-    {[m
[31m-        printf("%d ", arr[i]);[m
[31m-    }[m
[31m-    printf("\n");[m
[31m-[m
[31m-    // Get position and new value from user[m
[31m-    printf("Enter position (0-6) to change: ");[m
[31m-    scanf("%d", &position);[m
[31m-[m
[31m-    // Validate position[m
[31m-    if (position < 0 || position >= 7)[m
[31m-    {[m
[31m-        printf("Invalid position! .\n");[m
[31m-    }[m
[31m-    else[m
[31m-    {[m
[31m-[m
[31m-        printf("Enter new value: ");[m
[31m-        scanf("%d", &newValue);[m
[31m-[m
[31m-        printf("Current value at position %d is: %d\n", position, arr[position]);[m
[31m-[m
[31m-        // Change the element[m
[31m-        arr[position] = newValue;[m
[31m-[m
[31m-        // Display modified array[m
[31m-        printf("\nModified array: ");[m
[31m-        for (i = 0; i < 7; i++)[m
[31m-        {[m
[31m-            printf("%d ", arr[i]);[m
[31m-        }[m
[31m-        printf("\n");[m
[31m-    }[m
[31m-[m
[31m-    return 0;[m
[31m-}[m
[1mdiff --git a/avg_in3X4greater100.c b/avg_in3X4greater100.c[m
[1mnew file mode 100644[m
[1mindex 0000000..25c9881[m
[1m--- /dev/null[m
[1m+++ b/avg_in3X4greater100.c[m
[36m@@ -0,0 +1,40 @@[m
[32m+[m[32m// Q 3) To find the average of those element which is above 100 in 3X4 array[m
[32m+[m
[32m+[m
[32m+[m[32m#include<stdio.h>[m
[32m+[m[32mint main()[m
[32m+[m[32m{[m
[32m+[m[32m    int arr[3][4];[m
[32m+[m[32m    int i,j;[m
[32m+[m[32m    int count=0;[m
[32m+[m[32m    for(i=0;i<3;i++)[m
[32m+[m[32m    {   printf("Enter the element of the row %d: ",i+1);[m
[32m+[m[32m        for(j=0;j<4;j++)[m
[32m+[m[32m        {[m
[32m+[m[32m            scanf("%d",&arr[i][j]);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    int sum=0;[m
[32m+[m[32m    for(i=0;i<3;i++)[m
[32m+[m[32m    {[m
[32m+[m[32m        for(j=0;j<4;j++)[m
[32m+[m[32m        {[m
[32m+[m[32m            if(arr[i][j]>100)[m
[32m+[m[32m            {[m
[32m+[m[32m                sum+=arr[i][j];[m
[32m+[m[32m                count++;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    if(count==0)[m
[32m+[m[32m    {[m
[32m+[m[32m        printf("No number is greater than 100");[m
[32m+[m[32m    }[m
[32m+[m[32m    else[m
[32m+[m[32m    {[m
[32m+[m[32m        float avg=sum/count;[m
[32m+[m[32m    printf("The average of the numbers greater than 100 is %d",avg);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    return 0;[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/greatestin3X4.c b/greatestin3X4.c[m
[1mnew file mode 100644[m
[1mindex 0000000..af35059[m
[1m--- /dev/null[m
[1m+++ b/greatestin3X4.c[m
[36m@@ -0,0 +1,40 @@[m
[32m+[m[32m// Q 1) To find the greatest element in 3X4 array[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m
[32m+[m[32mint main() {[m
[32m+[m[32m    int a[3][4];[m
[32m+[m[32m    int max;[m
[32m+[m
[32m+[m[32m    printf("Enter the elements of the 3X4 array:\n");[m
[32m+[m[32m    for (int i = 0; i < 3; i++) { // row[m
[32m+[m[32m        printf("Enter the elements for row %d:\n", i + 1);[m
[32m+[m[32m        for (int j = 0; j < 4; j++) {[m
[32m+[m[32m            scanf("%d", &a[i][j]);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    printf("The elements of the 3X4 array are:\n");[m
[32m+[m[32m    for (int i = 0; i < 3; i++) { // row[m
[32m+[m[32m        for (int j = 0; j < 4; j++) {[m
[32m+[m[32m            printf("%d ", a[i][j]);[m
[32m+[m[32m        }[m
[32m+[m[32m        printf("\n");[m
[32m+[m[32m    }[m
[32m+[m[32m   int max=a[0][0];[m
[32m+[m[32m    for (int  i = 0; i < 3; i++)[m
[32m+[m[32m    {[m
[32m+[m[32m        /* code */[m
[32m+[m[32m        for (int  j = 0; j < 4; j++)[m
[32m+[m[32m        {[m
[32m+[m[32m            /* code */[m
[32m+[m[32m            if(a[i][j] >max){[m
[32m+[m[32m              max = a[i][j];[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m    }[m
[32m+[m[32m    printf("The greatest element in the array is: %d\n", max);[m
[32m+[m
[32m+[m
[32m+[m[32m    return 0;[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/arraychange.exe b/greatestin3X4.exe[m
[1msimilarity index 71%[m
[1mrename from arraychange.exe[m
[1mrename to greatestin3X4.exe[m
[1mindex a9902ff..0c92171 100644[m
Binary files a/arraychange.exe and b/greatestin3X4.exe differ
[1mdiff --git a/greatestin3X4_ineachrow.c b/greatestin3X4_ineachrow.c[m
[1mnew file mode 100644[m
[1mindex 0000000..37f54c0[m
[1m--- /dev/null[m
[1m+++ b/greatestin3X4_ineachrow.c[m
[36m@@ -0,0 +1,37 @@[m
[32m+[m[32m// Q 2) To find the greatest element in each row 3X4 array[m
[32m+[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m
[32m+[m[32mi